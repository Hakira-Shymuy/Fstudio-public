%%SELECTOR%% {
  {{ macros.spacing_all(design.spacing) }}
  {{ macros.size(design.size) }}
  {{ macros.borders(design.borders) }}
  {{ macros.fancyBackgroundHtml(design.background) }}

{% if design.grid_layout.is_grid %}
  /* is grid */
  display: grid;
  column-gap: {{ design.grid_layout.column_gap.style }};/* grid column gap */
  row-gap: {{ design.grid_layout.row_gap.style }};/* grid row gap */
  {% if design.grid_layout.auto_columns %}
    grid-template-columns:repeat(auto-fit, minmax({{ design.grid_layout.auto_min.style }},{{ design.grid_layout.auto_max.style }}));
  {% else %}
    grid-template-columns:repeat({{ design.grid_layout.grid_columns }}, 1fr);
  {% endif %}

{% else %}
   /* is not grid */
  {% if design.grid_layout.is_child %}
  	grid-column: span {{ design.grid_layout.column_span }};
  {% endif %}
   {{ macros.layout(design.flex_layout) }}
{% endif %}

      

/* Align on Vertical axis */
{% if design.grid_layout.align_items == 'stretch' %}
	align-items: stretch;
{% elseif design.grid_layout.align_items == 'start' %}
	align-items: start;
{% elseif design.grid_layout.align_items == 'center' %}
	align-items: center;
{% elseif design.grid_layout.align_items == 'end' %}
	align-items: end;
{% endif %}
      
/* Align on Horizontal axis */
{% if design.grid_layout.justify_items == 'stretch' %}
	justify-items: stretch;
{% elseif design.grid_layout.justify_items == 'start' %}
	justify-items: start;
{% elseif design.grid_layout.justify_items == 'center' %}
	justify-items: center;
{% elseif design.grid_layout.justify_items == 'end' %}
	justify-items: end;
{% endif %}

      
}


{{ macros.fancyBackgroundCss('%%SELECTOR%%', design.background, breakpoint) }}